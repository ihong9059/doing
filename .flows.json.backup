[
    {
        "id": "9dc7d6ae6b54526f",
        "type": "tab",
        "label": "플로우 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b187e9defb00038b",
        "type": "ui_group",
        "name": "whybiz_sw",
        "tab": "801378ee1394f0b0",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8cbc90e4ec598b26",
        "type": "ui_group",
        "name": "whybiz_relay",
        "tab": "801378ee1394f0b0",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ed438d4b0b69a9b",
        "type": "serial-port",
        "serialport": "COM9",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "10",
        "bin": "false",
        "out": "time",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "551a49aa0f875b2e",
        "type": "ui_group",
        "name": "whybiz_node",
        "tab": "3d74f4ac833842a5",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c04f5b13d733f7f5",
        "type": "ui_group",
        "name": "whybiz_channel",
        "tab": "801378ee1394f0b0",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8fd56933f0d9ec84",
        "type": "ui_group",
        "name": "whybiz_info",
        "tab": "bf8dd84ede46002f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b03aef8a27d99238",
        "type": "ui_group",
        "name": "whybiz_lora",
        "tab": "bf8dd84ede46002f",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "187e67f6b37403a2",
        "type": "ui_group",
        "name": "whybiz_ADC",
        "tab": "bf8dd84ede46002f",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8a0ae71699e63e4c",
        "type": "ui_group",
        "name": "whybiz_lora_power",
        "tab": "801378ee1394f0b0",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "461a06597ab3daf5",
        "type": "ui_group",
        "name": "whybiz_channel",
        "tab": "bf8dd84ede46002f",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "652de65b0a5d3f6c",
        "type": "ui_group",
        "name": "relay_status",
        "tab": "801378ee1394f0b0",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f044b6e7b8fba745",
        "type": "serial-port",
        "serialport": "COM5",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "10",
        "bin": "false",
        "out": "interbyte",
        "addchar": "\\r\\n",
        "responsetimeout": "10000"
    },
    {
        "id": "2477b48514d1ba01",
        "type": "serial-port",
        "name": "",
        "serialport": "/dev/tty.usbserial-005E0EA3",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "10",
        "bin": "false",
        "out": "time",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "27f9bfaa4bc92ea0",
        "type": "serial-port",
        "name": "",
        "serialport": "/dev/tty.usbserial-005E0EA3",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "7d74bd085fe20b5c",
        "type": "serial-port",
        "serialport": "COM9",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "801378ee1394f0b0",
        "type": "ui_tab",
        "name": "whybiz control",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3d74f4ac833842a5",
        "type": "ui_tab",
        "name": "whybiz factor set",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bf8dd84ede46002f",
        "type": "ui_tab",
        "name": "whybiz Info",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bcd3f9e8f47ea1aa",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e2c4771c9a5128dc",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "switch parse",
        "func": "var ca = msg.payload[0];\nvar se = msg.payload[1];\nvar va = msg.payload[2];\nvar crc = msg.payload[3];\n// msg.payload = \"se: \" + se + \", va: \" + va;\n// return msg;\nvar list = [false, true, false, true, false, true, false, true];\n\nif (ca != 2) return; //for switch\n\nif(se & 0x01) list[0] = false;\nelse list[0] =true;\n\nif(se & 0x02) list[1] = false;\nelse list[1] =true;\n\nif(se & 0x04) list[2] = false;\nelse list[2] =true;\n\nif(se & 0x08) list[3] = false;\nelse list[3] =true;\n\nif(se & 0x10) list[4] = false;\nelse list[4] =true;\n\nif(se & 0x20) list[5] = false;\nelse list[5] =true;\n\nif(se & 0x40) list[6] = false;\nelse list[6] =true;\n\nif(se & 0x80) list[7] = false;\nelse list[7] =true;\n\nmsg.payload = list[0];\nvar msg1 = { payload: list[1] };\nvar msg2 = { payload: list[2] };\nvar msg3 = { payload: list[3] };\nvar msg4 = { payload: list[4] };\nvar msg5 = { payload: list[5] };\nvar msg6 = { payload: list[6] };\nvar msg7 = { payload: list[7] };\n\nlist = [msg, msg1, msg2, msg3, msg4, msg5, msg6, msg7];\nreturn list;\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 260,
        "wires": [
            [
                "34a5de8a53ae8d5f"
            ],
            [
                "f73e319e8cdbe7c5"
            ],
            [
                "79f3c1b079ae7881"
            ],
            [
                "64f317097353055a"
            ],
            [
                "6d1da043886ef082"
            ],
            [
                "25d89490baaffb45"
            ],
            [
                "b82da67c968f636b"
            ],
            [
                "ddfa9d6a11dee045"
            ]
        ]
    },
    {
        "id": "ddfa9d6a11dee045",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "switch8",
        "tooltip": "",
        "group": "b187e9defb00038b",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1180,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "34a5de8a53ae8d5f",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "switch1",
        "tooltip": "",
        "group": "b187e9defb00038b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1180,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f73e319e8cdbe7c5",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "switch2",
        "tooltip": "",
        "group": "b187e9defb00038b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1180,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "79f3c1b079ae7881",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "switch3",
        "tooltip": "",
        "group": "b187e9defb00038b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1180,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "64f317097353055a",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "switch4",
        "tooltip": "",
        "group": "b187e9defb00038b",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1180,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "6d1da043886ef082",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "switch5",
        "tooltip": "",
        "group": "b187e9defb00038b",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1180,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "25d89490baaffb45",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "switch6",
        "tooltip": "",
        "group": "b187e9defb00038b",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1180,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "b82da67c968f636b",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "switch7",
        "tooltip": "",
        "group": "b187e9defb00038b",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1180,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "95401a2c89180896",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay1",
        "tooltip": "",
        "group": "8cbc90e4ec598b26",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "0",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 70,
        "y": 620,
        "wires": [
            [
                "3c7680eb3634e50b"
            ]
        ]
    },
    {
        "id": "1a732778edf72c5a",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay5",
        "tooltip": "",
        "group": "8cbc90e4ec598b26",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "4",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 70,
        "y": 780,
        "wires": [
            [
                "3c7680eb3634e50b"
            ]
        ]
    },
    {
        "id": "55527eb70b7c8228",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay2",
        "tooltip": "",
        "group": "8cbc90e4ec598b26",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "1",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 70,
        "y": 660,
        "wires": [
            [
                "3c7680eb3634e50b"
            ]
        ]
    },
    {
        "id": "e392a5a677d8562b",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay3",
        "tooltip": "",
        "group": "8cbc90e4ec598b26",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "2",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 70,
        "y": 700,
        "wires": [
            [
                "3c7680eb3634e50b"
            ]
        ]
    },
    {
        "id": "823d2125aa8b76a1",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay4",
        "tooltip": "",
        "group": "8cbc90e4ec598b26",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "3",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 70,
        "y": 740,
        "wires": [
            [
                "3c7680eb3634e50b"
            ]
        ]
    },
    {
        "id": "d8397717f7302089",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay6",
        "tooltip": "",
        "group": "8cbc90e4ec598b26",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "5",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 70,
        "y": 820,
        "wires": [
            [
                "3c7680eb3634e50b"
            ]
        ]
    },
    {
        "id": "2a8ffad6597f85bb",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay7",
        "tooltip": "",
        "group": "8cbc90e4ec598b26",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "6",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 70,
        "y": 860,
        "wires": [
            [
                "3c7680eb3634e50b"
            ]
        ]
    },
    {
        "id": "0795889f4391ace5",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay8",
        "tooltip": "",
        "group": "8cbc90e4ec598b26",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "7",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 70,
        "y": 900,
        "wires": [
            [
                "3c7680eb3634e50b"
            ]
        ]
    },
    {
        "id": "d160b2afa8f7126c",
        "type": "serial out",
        "z": "9dc7d6ae6b54526f",
        "name": "com3 for 485",
        "serial": "1ed438d4b0b69a9b",
        "x": 710,
        "y": 800,
        "wires": []
    },
    {
        "id": "212b48e6acbeee68",
        "type": "ui_numeric",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "ble num",
        "tooltip": "",
        "group": "551a49aa0f875b2e",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "255",
        "step": 1,
        "className": "",
        "x": 120,
        "y": 1100,
        "wires": [
            [
                "a13de676ff047734"
            ]
        ]
    },
    {
        "id": "a13de676ff047734",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "get ble",
        "func": "var ble_num = msg.payload;\nflow.set(\"ble_num1\", ble_num);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "1f9fea7a47d743fc",
        "type": "ui_dropdown",
        "z": "9dc7d6ae6b54526f",
        "name": "channel",
        "label": "channel",
        "tooltip": "",
        "place": "Select option",
        "group": "c04f5b13d733f7f5",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Ethernet",
                "value": 0,
                "type": "num"
            },
            {
                "label": "RS485",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Lora",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "channel",
        "topicType": "str",
        "className": "",
        "x": 120,
        "y": 1340,
        "wires": [
            [
                "414c2fc9b7272a8a"
            ]
        ]
    },
    {
        "id": "7aaf47665338b9f8",
        "type": "ui_button",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "group": "551a49aa0f875b2e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "set Number",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 1200,
        "wires": [
            [
                "642149bdab5a99d2"
            ]
        ]
    },
    {
        "id": "ff03a2924c49c4d5",
        "type": "ui_numeric",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "version",
        "tooltip": "",
        "group": "551a49aa0f875b2e",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "255",
        "step": 1,
        "className": "",
        "x": 120,
        "y": 1160,
        "wires": [
            [
                "1a10126bf082fba6"
            ]
        ]
    },
    {
        "id": "1a10126bf082fba6",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "get node",
        "func": "var version = msg.payload;\nflow.set(\"new_version\", version);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "642149bdab5a99d2",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "set node",
        "func": "var version = flow.get(\"new_version\");\nvar ble_num = flow.get(\"ble_num1\");\n\n\nmsg.payload = { \"no\": 1, \"ca\": 25, \"se\": version, \"va\": ble_num};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "967c6fdd84bf55ec",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "adc switch",
        "func": "var ca = msg.payload[0];\nvar se = msg.payload[1];\nvar va = msg.payload[2];\nvar crc = msg.payload[3];\n// msg.payload = \"se: \" + se + \", va: \" + va;\n// return msg;\n\nif(ca != 1) return;\n\nvar adc1 = se;\nvar adc2 = va;\n\nmsg.payload = adc1;\nvar msg1 = { payload: adc2 };\n\nreturn [msg, msg1];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 920,
        "wires": [
            [
                "9d7bef885e13a4e7"
            ],
            [
                "e7e1a88cfb7f09f6"
            ]
        ]
    },
    {
        "id": "247aa0eab8b9dde8",
        "type": "ui_text",
        "z": "9dc7d6ae6b54526f",
        "group": "8fd56933f0d9ec84",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Version: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1220,
        "y": 1020,
        "wires": []
    },
    {
        "id": "043e3ff97263b431",
        "type": "ui_text",
        "z": "9dc7d6ae6b54526f",
        "group": "b03aef8a27d99238",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "rssi: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 270,
        "y": 480,
        "wires": []
    },
    {
        "id": "9d7bef885e13a4e7",
        "type": "ui_gauge",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "group": "187e67f6b37403a2",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "adc1",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1210,
        "y": 900,
        "wires": []
    },
    {
        "id": "e7e1a88cfb7f09f6",
        "type": "ui_gauge",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "group": "187e67f6b37403a2",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "adc2",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1210,
        "y": 940,
        "wires": []
    },
    {
        "id": "309b9eedd0727de8",
        "type": "ui_numeric",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "lora power",
        "tooltip": "",
        "group": "8a0ae71699e63e4c",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": 1,
        "className": "",
        "x": 130,
        "y": 1280,
        "wires": [
            [
                "3a778cb7af6d7761"
            ]
        ]
    },
    {
        "id": "c081b496ed832dbf",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "set power",
        "func": "var power = flow.get('lora_power');\nmsg.payload = { \"no\": 1, \"ca\": 14, \"se\": power, \"va\": power};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "f4926a662ee482e3",
        "type": "ui_button",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "group": "c04f5b13d733f7f5",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "set channel",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 1340,
        "wires": [
            [
                "909ab3fe66ada915"
            ]
        ]
    },
    {
        "id": "617daede40ea069f",
        "type": "ui_numeric",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "lora ch",
        "tooltip": "",
        "group": "c04f5b13d733f7f5",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "lora",
        "topicType": "str",
        "format": "{{value}}",
        "min": "1",
        "max": "23",
        "step": 1,
        "className": "",
        "x": 110,
        "y": 1400,
        "wires": [
            [
                "414c2fc9b7272a8a"
            ]
        ]
    },
    {
        "id": "414c2fc9b7272a8a",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "set channel ",
        "func": "if(msg.topic == 'channel'){\n    global.set('channel', msg.payload);\n    msg.payload = 'uart channel: ' + msg.payload;\n} \nelse if(msg.topic){\n    flow.set('lora', msg.payload);\n    msg.payload = 'lora channel: ' + msg.payload;\n}\nelse{\n    msg.payload = \"error data in channel\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1400,
        "wires": [
            [
                "f3d0cc29185672a7"
            ]
        ]
    },
    {
        "id": "0b996d4006aee902",
        "type": "ui_text",
        "z": "9dc7d6ae6b54526f",
        "group": "b03aef8a27d99238",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "lora ch",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1140,
        "wires": []
    },
    {
        "id": "25ca4bb6e5b02a44",
        "type": "ui_text",
        "z": "9dc7d6ae6b54526f",
        "group": "b03aef8a27d99238",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "power",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 980,
        "wires": []
    },
    {
        "id": "048485c38ef4be5b",
        "type": "ui_button",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "group": "8a0ae71699e63e4c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 1240,
        "wires": [
            [
                "c081b496ed832dbf"
            ]
        ]
    },
    {
        "id": "3a778cb7af6d7761",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "function 2",
        "func": "flow.set('lora_power', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "e7d1c3bd427ce64d",
        "type": "ui_text",
        "z": "9dc7d6ae6b54526f",
        "group": "8fd56933f0d9ec84",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "node, ble, wifi num: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1250,
        "y": 1060,
        "wires": []
    },
    {
        "id": "7bd37969803dd616",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "lora switch ",
        "func": "var ca = msg.payload[0];\nvar se = msg.payload[1];\nvar va = msg.payload[2];\nvar crc = msg.payload[3];\n\nif (ca != 4) return;    //LORA_DEVICE\n\nvar power = se;\nvar rssi = va;\n\nmsg.payload = rssi; //rssi\nvar msg1 = { payload: se }; //power\nvar list = [msg, msg1];\n\nreturn list;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 980,
        "wires": [
            [
                "25ca4bb6e5b02a44"
            ],
            []
        ]
    },
    {
        "id": "7dda00d323e5afee",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "version",
        "func": "var ca = msg.payload[0];\nvar se = msg.payload[1];\nvar va = msg.payload[2];\nvar crc = msg.payload[3];\n\nif (ca != 5) return;    //LORA_DEVICE\n\nvar version = se;\nvar ble_num = va;\n\nmsg.payload = version;\nvar msg1 = { payload: ble_num };\nvar list = [msg, msg1];\nreturn list;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1040,
        "wires": [
            [
                "247aa0eab8b9dde8"
            ],
            [
                "e7d1c3bd427ce64d"
            ]
        ]
    },
    {
        "id": "f5f5b7b5296ce00d",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "channel switch ",
        "func": "var ca = msg.payload[0];\nvar se = msg.payload[1];\nvar va = msg.payload[2];\nvar crc = msg.payload[3];\n\nif (ca != 6) return;    //CHANNEL_DEVICE\n\nvar uart = se;\nvar lora_ch = va;\n\nswitch (se) {\n    case 0: uart = \"Ethernet\"; break;\n    case 1: uart = \"RS485\"; break;\n    case 2: uart = \"Lora\"; break;\n    case 3: uart = \"T.B.D\"; break;\n}\n\nmsg.payload = uart;\nvar msg1 = { payload: lora_ch };\nvar list = [msg, msg1];\nreturn list;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1100,
        "wires": [
            [
                "b778fee422358a59"
            ],
            [
                "0b996d4006aee902"
            ]
        ]
    },
    {
        "id": "862abf3e9150877d",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "relay parse",
        "func": "var ca = msg.payload[0];\nvar se = msg.payload[1];\nvar va = msg.payload[2];\nvar crc = msg.payload[3];\n// msg.payload = \"se: \" + se + \", va: \" + va;\n// return msg;\nvar list = [false, true, false, true, false, true, false, true];\n\nif (ca != 3) return; //for relay\n\nif(se & 0x01) list[0] = true;\nelse list[0] = false;\n\nif(se & 0x02) list[1] = true;\nelse list[1] = false;\n\nif (se & 0x04) list[2] = true;\nelse list[2] = false;\n\nif (se & 0x08) list[3] = true;\nelse list[3] = false;\n\nif (se & 0x10) list[4] = true;\nelse list[4] = false;\n\nif (se & 0x20) list[5] = true;\nelse list[5] = false;\n\nif (se & 0x40) list[6] = true;\nelse list[6] = false;\n\nif (se & 0x80) list[7] = true;\nelse list[7] =false;\n\nmsg.payload = list[0];\nvar msg1 = { payload: list[1] };\nvar msg2 = { payload: list[2] };\nvar msg3 = { payload: list[3] };\nvar msg4 = { payload: list[4] };\nvar msg5 = { payload: list[5] };\nvar msg6 = { payload: list[6] };\nvar msg7 = { payload: list[7] };\n\nlist = [msg, msg1, msg2, msg3, msg4, msg5, msg6, msg7];\nreturn list;\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 400,
        "wires": [
            [
                "7d8f98290a970d84"
            ],
            [
                "54766f31589268ea"
            ],
            [
                "09d5e6085ec083d5"
            ],
            [
                "d0035b37ec493ea6"
            ],
            [
                "651561a0ad1a51de"
            ],
            [
                "9fa822a6f49da5cc"
            ],
            [
                "5495510407ce0204"
            ],
            [
                "12e5e304e8a8b860"
            ]
        ]
    },
    {
        "id": "3c7680eb3634e50b",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "set relay",
        "func": "var se = Number(msg.topic);\nvar va = 0;\nif(msg.payload) va = 1;\n// bypass\n// msg.payload = {\"no\":1,\"ca\":13,\"se\":se,\"va\":va,\"crc\":12};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 640,
        "wires": [
            [
                "08e11675f078a5d2"
            ]
        ]
    },
    {
        "id": "7d8f98290a970d84",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "relay1",
        "func": "// var r1 = flow.get(\"r1\") | 0 ;\n// if(msg.payload == r1) return;\n// flow.set(\"r1\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 580,
        "wires": [
            [
                "9403db55f7a6a734"
            ]
        ]
    },
    {
        "id": "54766f31589268ea",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "relay2",
        "func": "// var r2 = flow.get(\"r2\") | 0;\n// if (msg.payload == r2) return;\n// flow.set(\"r2\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 620,
        "wires": [
            [
                "917334fdd4a6a1f9"
            ]
        ]
    },
    {
        "id": "09d5e6085ec083d5",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "relay3",
        "func": "// var r3 = flow.get(\"r3\") | 0;\n// if (msg.payload == r3) return;\n// flow.set(\"r3\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 660,
        "wires": [
            [
                "5612e87eceea0854"
            ]
        ]
    },
    {
        "id": "d0035b37ec493ea6",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "relay4",
        "func": "// var r4 = flow.get(\"r4\") | 0;\n// if (msg.payload == r4) return;\n// flow.set(\"r4\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 700,
        "wires": [
            [
                "eb3110283d7b91db"
            ]
        ]
    },
    {
        "id": "651561a0ad1a51de",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "relay5",
        "func": "// var r5 = flow.get(\"r5\") | 0;\n// if (msg.payload == r5) return;\n// flow.set(\"r5\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 740,
        "wires": [
            [
                "b33746194f834cf2"
            ]
        ]
    },
    {
        "id": "9fa822a6f49da5cc",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "relay6",
        "func": "// var r6 = flow.get(\"r6\") | 0;\n// if (msg.payload == r6) return;\n// flow.set(\"r6\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 780,
        "wires": [
            [
                "839a86f06f50d1f0"
            ]
        ]
    },
    {
        "id": "5495510407ce0204",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "relay7",
        "func": "// var r7 = flow.get(\"r7\") | 0;\n// if (msg.payload == r7) return;\n// flow.set(\"r7\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 820,
        "wires": [
            [
                "16f696106a439bc4"
            ]
        ]
    },
    {
        "id": "12e5e304e8a8b860",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "relay8",
        "func": "// var r8 = flow.get(\"r8\") | 0;\n// if (msg.payload == r8) return;\n// flow.set(\"r8\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 860,
        "wires": [
            [
                "f8f03e3e66722460"
            ]
        ]
    },
    {
        "id": "b778fee422358a59",
        "type": "ui_text",
        "z": "9dc7d6ae6b54526f",
        "group": "461a06597ab3daf5",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "UART: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1210,
        "y": 1100,
        "wires": []
    },
    {
        "id": "74bc19934eb1a87b",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "uart switch",
        "func": "var loraSwitch = flow.get('lora') | 0;\nif(loraSwitch){\n    msg.payload = 'at=u' + msg.payload;\n}\n// msg.payload = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "9403db55f7a6a734",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay1",
        "tooltip": "",
        "group": "652de65b0a5d3f6c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "0",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1190,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "b33746194f834cf2",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay5",
        "tooltip": "",
        "group": "652de65b0a5d3f6c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "4",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1190,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "917334fdd4a6a1f9",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay2",
        "tooltip": "",
        "group": "652de65b0a5d3f6c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "1",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1190,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "5612e87eceea0854",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay3",
        "tooltip": "",
        "group": "652de65b0a5d3f6c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "2",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1190,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "eb3110283d7b91db",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay4",
        "tooltip": "",
        "group": "652de65b0a5d3f6c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "3",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1190,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "839a86f06f50d1f0",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay6",
        "tooltip": "",
        "group": "652de65b0a5d3f6c",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "5",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1190,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "16f696106a439bc4",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay7",
        "tooltip": "",
        "group": "652de65b0a5d3f6c",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "6",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1190,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "f8f03e3e66722460",
        "type": "ui_switch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "label": "relay8",
        "tooltip": "",
        "group": "652de65b0a5d3f6c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "7",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1190,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "c31a378ab9776d40",
        "type": "tcp in",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "server": "server",
        "host": "",
        "port": "6666",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "0ca48904fe90697c"
            ]
        ]
    },
    {
        "id": "3f3e0323551636df",
        "type": "tcp out",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "host": "0.0.0.0",
        "port": "7777",
        "beserver": "client",
        "base64": false,
        "end": true,
        "tls": "",
        "x": 720,
        "y": 700,
        "wires": []
    },
    {
        "id": "cdfb4a89d1d78c67",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "function 3",
        "func": "msg.payload = msg.payload + '\\r\\n';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "07832a0579eab9cb",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "for rssi test",
        "func": "var channel = global.get('channel') | 0;\nvar ca = msg.payload[0];\nvar se = msg.payload[1];\nvar va = msg.payload[2];\nvar crc = msg.payload[3];\n\nif (ca == 32) return; //for relay\n\nif (channel == 2){\n    msg.payload = 'AT=I';\n    return msg;\n} \n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 110,
        "y": 320,
        "wires": [
            [
                "2414442380791f28"
            ]
        ]
    },
    {
        "id": "8cbd55c1bba5f57e",
        "type": "serial out",
        "z": "9dc7d6ae6b54526f",
        "name": "send2lora:com3",
        "serial": "f044b6e7b8fba745",
        "x": 460,
        "y": 320,
        "wires": []
    },
    {
        "id": "29cc442654879252",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "rssi result",
        "func": "var ca = msg.payload[0];\nvar se = msg.payload[1];\nvar va = msg.payload[2];\nvar crc = msg.payload[3];\n\nif (ca == 32){\n    msg.payload = se;\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 380,
        "wires": [
            [
                "af84c5efa2c26057",
                "043e3ff97263b431",
                "b2546cc77f21999c"
            ]
        ]
    },
    {
        "id": "2414442380791f28",
        "type": "delay",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "pauseType": "random",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "3",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 320,
        "wires": [
            [
                "8cbd55c1bba5f57e"
            ]
        ]
    },
    {
        "id": "af84c5efa2c26057",
        "type": "ui_gauge",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "group": "b03aef8a27d99238",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Lora Rssi",
        "label": "units",
        "format": "{{value}}",
        "min": "140",
        "max": "195",
        "colors": [
            "#b30036",
            "#e6e600",
            "#59cb3a"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 280,
        "y": 440,
        "wires": []
    },
    {
        "id": "33d73ebfc6a04931",
        "type": "inject",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 650,
        "y": 1500,
        "wires": [
            [
                "b328ec49d7bdf024"
            ]
        ]
    },
    {
        "id": "b328ec49d7bdf024",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "function 6",
        "func": "var rssi = flow.get('rssi');\nmsg.payload = {\"ca\":32, \"se\":rssi, \"va\":rssi};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1540,
        "wires": [
            [
                "7b4fe616a3540a43"
            ]
        ]
    },
    {
        "id": "7b4fe616a3540a43",
        "type": "json",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "8878359c9aa3974d",
        "type": "serial in",
        "z": "9dc7d6ae6b54526f",
        "name": "com5 for lora",
        "serial": "2477b48514d1ba01",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "f9436fa1cdbbdaec"
            ]
        ]
    },
    {
        "id": "86420dc869c49865",
        "type": "debug",
        "z": "9dc7d6ae6b54526f",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 380,
        "wires": []
    },
    {
        "id": "d544c8f75a11a579",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "receiveAck",
        "func": "var myData = msg.payload;\nif(myData == null) return;\n\nvar pNo = 1; var pCa = 2; var pSe = 3; var pVa = 4; var pCrc = 5;\n\nvar start = myData[0];\nvar stop = myData[6];\n\nvar crc = myData[pCrc];\nvar ackFlag = flow.get('ackFlag');\nvar len = myData.length;\nvar check = flow.get('crc');\nvar cmd = myData[pCa];\n\nif (ackFlag)\n    if (start == 123)\n        if (stop == 125)\n            if (check == crc) {\n                msg.payload = \"ok\";\n                flow.set('ackFlag', false);\n                flow.set('retry', 0);\n                flow.set('cmd', 0);\n                flow.set('crc', 0);\n                return msg;\n            }\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "885614ab14790fb3",
        "type": "delay",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 120,
        "y": 1020,
        "wires": [
            [
                "d544c8f75a11a579"
            ]
        ]
    },
    {
        "id": "a1ddc4361915ca8a",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "cmd parse",
        "func": "var myData = msg.payload;\nvar pNo = 1; var pCa = 2; var pSe = 3; var pVa = 4; var pCrc = 5;\nvar msg1 = {payload: 'status'};\n\nif (myData[pCa] == 200) msg1.payload = null;\nelse msg.payload = null;\n\nreturn [msg, msg1];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 960,
        "wires": [
            [
                "885614ab14790fb3"
            ],
            []
        ]
    },
    {
        "id": "0b603072fcb33a5f",
        "type": "csv",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 530,
        "y": 60,
        "wires": [
            [
                "c90b992d0ed1951d",
                "7c773a90953bf4dd",
                "ddba650f1dc4c31d"
            ]
        ]
    },
    {
        "id": "c90b992d0ed1951d",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "rx parsing",
        "func": "var ca = parseInt(msg.payload.col1);\nvar se = parseInt(msg.payload.col2);\nvar va = parseInt(msg.payload.col3);\nvar crc = parseInt(msg.payload.col4);\n\nif (Number.isNaN(se)) return;\nif (Number.isNaN(va)) return;\nif (Number.isNaN(crc)) return;\n\nvar before = flow.get('crc') | 0;\n\nif (before == crc) {\n    flow.set('ackFlag', false);\n    flow.set('retry', 0);\n    msg.payload = new Buffer([ca, se, va, crc])\n    return msg;\n} else if (crc == 200) {\n    msg.payload = new Buffer([ca, se, va, crc])\n    return msg;\n} else if(ca == 32){// for rssi\n    msg.payload = new Buffer([ca, se, va, crc])\n    return msg;\n}\n// msg.payload = 'ca:' + ca + ', se:' + se + ' ,va:' + va + ', crc:' + crc;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 180,
        "wires": [
            [
                "862abf3e9150877d",
                "e2c4771c9a5128dc",
                "967c6fdd84bf55ec",
                "7bd37969803dd616",
                "7dda00d323e5afee",
                "f5f5b7b5296ce00d",
                "29cc442654879252",
                "07832a0579eab9cb",
                "7c773a90953bf4dd"
            ]
        ]
    },
    {
        "id": "9be8ebb579a42e36",
        "type": "catch",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 180,
        "wires": [
            [
                "37ca9d66410ef50d"
            ]
        ]
    },
    {
        "id": "352e2aaef0f0e90a",
        "type": "serial out",
        "z": "9dc7d6ae6b54526f",
        "name": "com5 for lora",
        "serial": "27f9bfaa4bc92ea0",
        "x": 710,
        "y": 900,
        "wires": []
    },
    {
        "id": "08e11675f078a5d2",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "sendCmd",
        "func": "var se = Number(msg.topic);\nvar va = 0;\nif(msg.payload) va = 1;\n\n// msg.payload = {\"no\":1,\"ca\":13,\"se\":se,\"va\":va,\"crc\":12};\n\nvar crc = flow.get('crc') | 0;\ncrc += 1;\n// [123, 1, 123, 3, 125, 5, 125, 10, 13]\n\nif(crc == 13) crc = 14; //cr, lf\nif(crc == 10) crc = 11; //cr, lf\nif(crc > 127) crc = 0;\n\nmsg.payload = new Buffer([123, 1, 12, se, va, crc, 125, 10, 13]);//lora, 12\n// msg.payload = new Buffer([123, 1, 13, se, va, crc, 125, 10, 13]);\n\nflow.set('crc', crc);\nflow.set('cmd', msg.payload);\nflow.set('ackFlag', true);\nflow.set('retry', 0);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 700,
        "wires": [
            [
                "be2f1deb5816d5df",
                "cfc83279f777d815"
            ]
        ]
    },
    {
        "id": "f3d0cc29185672a7",
        "type": "debug",
        "z": "9dc7d6ae6b54526f",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1bdef2ca0601d214",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "checkAck",
        "func": "if(flow.get('ackFlag')){\n    msg.payload = new Buffer(flow.get('cmd'));\n    var retry = flow.get('retry') | 0;\n    if(retry > 4){\n        flow.set('ackFlag', false);\n        flow.set('retry', 0);\n        return;\n    }else{\n        retry += 1;\n        flow.set('retry', retry);\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 820,
        "wires": [
            [
                "cfc83279f777d815",
                "be2f1deb5816d5df"
            ]
        ]
    },
    {
        "id": "be2f1deb5816d5df",
        "type": "delay",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 760,
        "wires": [
            [
                "1bdef2ca0601d214"
            ]
        ]
    },
    {
        "id": "909ab3fe66ada915",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "set new ch",
        "func": "var uart = flow.get('uart');\nvar lora = flow.get('lora');\nmsg.payload = { \"no\": 1, \"ca\": 16, \"se\": uart, \"va\": lora};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1340,
        "wires": [
            [
                "74bc19934eb1a87b",
                "cdfb4a89d1d78c67"
            ]
        ]
    },
    {
        "id": "2192663c57223561",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "relay parse",
        "func": "var list = [false, true, false, true, false, true, false, true];\n\nvar obj = msg.payload;\nvar myNode = obj.no;\nvar category = obj.ca;\nvar sensor = obj.se;\nvar value = obj.va;\n\nif (category != 3) return;\n\nif(sensor & 0x01) list[0] = true;\nelse list[0] = false;\n\nif(sensor & 0x02) list[1] = true;\nelse list[1] = false;\n\nif (sensor & 0x04) list[2] = true;\nelse list[2] = false;\n\nif (sensor & 0x08) list[3] = true;\nelse list[3] = false;\n\nif (sensor & 0x10) list[4] = true;\nelse list[4] = false;\n\nif (sensor & 0x20) list[5] = true;\nelse list[5] = false;\n\nif (sensor & 0x40) list[6] = true;\nelse list[6] = false;\n\nif (sensor & 0x80) list[7] = true;\nelse list[7] =false;\n\nmsg.payload = list[0];\nvar msg1 = { payload: list[1] };\nvar msg2 = { payload: list[2] };\nvar msg3 = { payload: list[3] };\nvar msg4 = { payload: list[4] };\nvar msg5 = { payload: list[5] };\nvar msg6 = { payload: list[6] };\nvar msg7 = { payload: list[7] };\n\nlist = [msg, msg1, msg2, msg3, msg4, msg5, msg6, msg7];\nreturn list;\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 60,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "ffda1018b5f69af1",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "switch parse",
        "func": "var list = [false, true, false, true, false, true, false, true];\n\nvar obj = msg.payload;\nvar myNode = obj.no;\nvar category = obj.ca;\nvar sensor = obj.se;\nvar value = obj.va;\n\nif (category != 2) return;\n\nif(sensor & 0x01) list[0] = false;\nelse list[0] =true;\n\nif(sensor & 0x02) list[1] = false;\nelse list[1] =true;\n\nif(sensor & 0x04) list[2] = false;\nelse list[2] =true;\n\nif(sensor & 0x08) list[3] = false;\nelse list[3] =true;\n\nif(sensor & 0x10) list[4] = false;\nelse list[4] =true;\n\nif(sensor & 0x20) list[5] = false;\nelse list[5] =true;\n\nif(sensor & 0x40) list[6] = false;\nelse list[6] =true;\n\nif(sensor & 0x80) list[7] = false;\nelse list[7] =true;\n\nmsg.payload = list[0];\nvar msg1 = { payload: list[1] };\nvar msg2 = { payload: list[2] };\nvar msg3 = { payload: list[3] };\nvar msg4 = { payload: list[4] };\nvar msg5 = { payload: list[5] };\nvar msg6 = { payload: list[6] };\nvar msg7 = { payload: list[7] };\n\nlist = [msg, msg1, msg2, msg3, msg4, msg5, msg6, msg7];\nreturn list;\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "c43da853f879ee43",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "lora switch ",
        "func": "var obj = msg.payload;\nvar myNode = obj.no;\nvar category = obj.ca;\nvar sensor = obj.se;\nvar value = obj.va;\n\nswitch(category){\n    // case 1: //adc\n    //     flow.set(\"adc1\", sensor);\n    //     flow.set(\"adc2\", value);\n    // break;\n    case 4: //lora_device\n        flow.set(\"rssi\", sensor);\n        flow.set(\"power\", value);\n    break;\n    // case 5: //version\n    //     flow.set(\"version\", sensor);\n    //     flow.set(\"ble_num\", value);\n    // break;\n    // case 6: //channel\n    //     flow.set(\"now_uart\", sensor);\n    //     flow.set(\"now_lora\", value);\n    // break;\n    default: return;\n}\n\nvar version = flow.get(\"version\") | 0;\nvar ble_num = flow.get(\"ble_num\") | 0;\nvar adc1 = flow.get(\"adc1\") | 0;\nvar adc2 = flow.get(\"adc2\") | 0;\nvar uart = flow.get(\"now_uart\") | 0;\nvar lora_ch = flow.get(\"now_lora\") | 0;\nvar rssi = flow.get(\"rssi\") | 0;\nvar power = flow.get(\"power\") | 0;\n\nmsg.payload = rssi;\nvar msg1 = { payload: power };\nvar list = [msg, msg1];\nreturn list;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 20,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "cfc83279f777d815",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "uart switch",
        "func": "var loraSwitch = flow.get('lora') | 0;\nvar msg1 = {payload: 0};\nif(global.get('channel') == 2){\n    msg1.payload = 'at=u' + msg.payload;\n    msg.payload = null;\n}\nreturn [msg, msg1];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 740,
        "wires": [
            [
                "dad36da10ecdeb31",
                "ae344618952c9451",
                "fa5d680cc5ffa933"
            ],
            [
                "5eb77670a339df60",
                "fa5d680cc5ffa933"
            ]
        ]
    },
    {
        "id": "2026687cd84546be",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "new rx Parsing",
        "func": "var myBuf = new Buffer(msg.payload, 'utf8');\n\nvar ca = myBuf[1];\nvar se = myBuf[2];\nvar va = myBuf[3];\nvar crc = myBuf[4];\n\nvar before = flow.get('crc') | 0;\n\nif (before == crc) {\n    // msg.payload = 'receive ack from node.'\n    flow.set('ackFlag', false);\n    flow.set('retry', 0);\n    msg.payload = new Buffer([ca, se, va, crc])\n    return msg;\n} else if (crc == 200) {\n    msg.payload = new Buffer([ca, se, va, crc])\n    return msg;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "1a3ed2ec4e49b743",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "old rx parsing",
        "func": "var ca = parseInt(msg.payload.col1);\nvar se = parseInt(msg.payload.col2);\nvar va = parseInt(msg.payload.col3);\nvar crc = parseInt(msg.payload.col4);\n\nif(Number.isNaN(se)) return;\nif(Number.isNaN(va)) return;\nif(Number.isNaN(crc)) return;\n\nvar before = flow.get('crc') | 0;\n\nif(before == crc){\n    // msg.payload = 'receive ack from node.'\n    flow.set('ackFlag', false);\n    flow.set('retry', 0);\n    msg.payload = new Buffer([ca, se, va, crc])\n    return msg;\n}else if(crc == 200){\n    msg.payload = new Buffer([ca, se, va, crc])\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "451390638cfe7754",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "function 8",
        "func": "// var myBuf = new Buffer(msg.payload, 'utf8');\nvar str = msg.payload;\nvar bytes = []; // char codes\nvar bytesv2 = []; // char codes\n\nfor (var i = 0; i < str.length; ++i) {\n    var code = str.charCodeAt(i);\n    code = code&0xff;\n    bytes = bytes.concat([code]);\n\n    // bytesv2 = bytesv2.concat([code & 0xff, code / 256 >>> 0]);\n}\n\n// 72, 101, 108, 108, 111, 31452\n// console.log('bytes', bytes.join(', '));\nmsg.payload = bytes.join(', ');\nreturn msg;\n\n// var myBuf1 = new Buffer(msg.payload[1]);\n// var myBuf2 = new Buffer(msg.payload[2]);\n// var myBuf3 = new Buffer(msg.payload[3]);\n// var myBuf4 = new Buffer(msg.payload[4]);\n\n// var ca = myBuf1[0];\n// var se = myBuf2[0];\n// var va = myBuf3[0];\n// var crc = myBuf4[0];\n\n// msg.payload = 'ca:' + ca + ', se:' + se + ', va:' + va + ', crc:' + crc;\n// // msg.payload = myBuf;\n// return msg;\n\n// var before = flow.get('crc') | 0;\n\n// if (before == crc) {\n//     // msg.payload = 'receive ack from node.'\n//     flow.set('ackFlag', false);\n//     flow.set('retry', 0);\n//     msg.payload = new Buffer([ca, se, va, crc])\n//     return msg;\n// } else if (crc == 200) {\n//     msg.payload = new Buffer([ca, se, va, crc])\n//     return msg;\n// }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "b6e6b66ee084a724",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "function 9",
        "func": "var str = \"Hello竜\";\nvar bytes = []; // char codes\nvar bytesv2 = []; // char codes\n\nfor (var i = 0; i < str.length; ++i) {\n    var code = str.charCodeAt(i);\n\n    bytes = bytes.concat([code]);\n\n    bytesv2 = bytesv2.concat([code & 0xff, code / 256 >>> 0]);\n}\n\n// 72, 101, 108, 108, 111, 31452\nconsole.log('bytes', bytes.join(', '));\nmsg.payload = bytes.join(', ');\n// 72, 0, 101, 0, 108, 0, 108, 0, 111, 0, 220, 122\n// console.log('bytesv2', bytesv2.join(', '));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "a62116c4096fc2da",
        "type": "inject",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1620,
        "wires": [
            [
                "b6e6b66ee084a724"
            ]
        ]
    },
    {
        "id": "9cd0bc9f22aed632",
        "type": "inject",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "AT=I",
        "payloadType": "str",
        "x": 110,
        "y": 520,
        "wires": [
            [
                "d5bf6f84a3299d7e"
            ]
        ]
    },
    {
        "id": "937521b3f3842b47",
        "type": "inject",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "at=i",
        "payloadType": "str",
        "x": 110,
        "y": 560,
        "wires": [
            [
                "d5bf6f84a3299d7e"
            ]
        ]
    },
    {
        "id": "d5bf6f84a3299d7e",
        "type": "serial out",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "serial": "1ed438d4b0b69a9b",
        "x": 330,
        "y": 520,
        "wires": []
    },
    {
        "id": "649138d28d81a4d4",
        "type": "serial in",
        "z": "9dc7d6ae6b54526f",
        "name": "com3 for 485",
        "serial": "7d74bd085fe20b5c",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "c3a70a1e1468d9e9"
            ]
        ]
    },
    {
        "id": "b2546cc77f21999c",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "from rssi",
        "func": "msg.payload = 'RSSI: ' + msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 380,
        "wires": [
            [
                "7c773a90953bf4dd"
            ]
        ]
    },
    {
        "id": "7c773a90953bf4dd",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "by pass",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "dad36da10ecdeb31",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "Ethernet Connect",
        "func": "var channel = global.get('channel') | 0;\nif(channel == 0) return msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 660,
        "wires": [
            [
                "f3d0cc29185672a7",
                "3f3e0323551636df"
            ]
        ]
    },
    {
        "id": "ae344618952c9451",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "RS485 connect",
        "func": "var channel = global.get('channel') | 0;\nif (channel == 1) return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 760,
        "wires": [
            [
                "f3d0cc29185672a7",
                "d160b2afa8f7126c"
            ]
        ]
    },
    {
        "id": "5eb77670a339df60",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "Lora connect",
        "func": "var channel = global.get('channel') | 0;\nif (channel == 2) return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 860,
        "wires": [
            [
                "f3d0cc29185672a7",
                "352e2aaef0f0e90a"
            ]
        ]
    },
    {
        "id": "f9436fa1cdbbdaec",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "Lorat pass",
        "func": "switch (global.get('channel')) {\n    case 0:\n    case 1:\n        return;\n    case 2:\n        return msg;\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            [
                "0b603072fcb33a5f",
                "72ec12e02a8abe74"
            ]
        ]
    },
    {
        "id": "fa5d680cc5ffa933",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "function 10",
        "func": "msg.payload = \"now channel: \" + global.get('channel');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 960,
        "wires": [
            [
                "f3d0cc29185672a7"
            ]
        ]
    },
    {
        "id": "72ec12e02a8abe74",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "check Input",
        "func": "switch (global.get('channel')) {\n    case 0:\n        msg.payload = 'Ethernet: ' + msg.payload;\n        return msg;\n    case 1:\n        msg.payload = 'RS485: ' + msg.payload;\n        return msg;\n    case 2:\n        msg.payload = 'Lora: ' + msg.payload;\n        return msg;\n    default:\n    return;    \n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 200,
        "wires": [
            [
                "7c773a90953bf4dd",
                "13c3e5d94d2c52e8",
                "b712287d79555884"
            ]
        ]
    },
    {
        "id": "37ca9d66410ef50d",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "error",
        "func": "msg.payload = \"ERROR: \" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c3a70a1e1468d9e9",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "RS485 pass",
        "func": "switch (global.get('channel')) {\n    case 0:\n        return;\n    case 1:\n        return msg;\n    case 2:\n       return;\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 100,
        "wires": [
            [
                "72ec12e02a8abe74",
                "0b603072fcb33a5f"
            ]
        ]
    },
    {
        "id": "0ca48904fe90697c",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "Ethernet pass",
        "func": "switch (global.get('channel')) {\n    case 0:\n        return msg;\n    case 1:\n    case 2:\n    return;\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 140,
        "wires": [
            [
                "72ec12e02a8abe74",
                "0b603072fcb33a5f"
            ]
        ]
    },
    {
        "id": "13c3e5d94d2c52e8",
        "type": "timeout",
        "z": "9dc7d6ae6b54526f",
        "name": "My Timeout",
        "outtopic": "timeout",
        "outsafe": "Safe",
        "outwarning": "Warning",
        "outunsafe": "Unsafe",
        "warning": "0",
        "timer": "5",
        "repeat": false,
        "again": false,
        "x": 610,
        "y": 480,
        "wires": [
            [
                "b712287d79555884"
            ]
        ]
    },
    {
        "id": "b712287d79555884",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "function 11",
        "func": "if(msg.topic == 'timeout') msg.payload = -1;\nelse msg.payload = global.get('channel');\n// msg.payload = 'Connection Error';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 540,
        "wires": [
            [
                "326c3c67dd9e212c"
            ]
        ]
    },
    {
        "id": "1bcfc60ec97f5afb",
        "type": "inject",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 460,
        "wires": [
            [
                "13c3e5d94d2c52e8"
            ]
        ]
    },
    {
        "id": "326c3c67dd9e212c",
        "type": "ui_gauge",
        "z": "9dc7d6ae6b54526f",
        "name": "",
        "group": "8cbc90e4ec598b26",
        "order": 8,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Channel",
        "label": "units",
        "format": "{{value}}",
        "min": "3",
        "max": "-1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 660,
        "y": 600,
        "wires": []
    },
    {
        "id": "ddba650f1dc4c31d",
        "type": "function",
        "z": "9dc7d6ae6b54526f",
        "name": "check Ack",
        "func": "var ca = parseInt(msg.payload.col1);\nvar se = parseInt(msg.payload.col2);\nvar va = parseInt(msg.payload.col3);\nvar crc = parseInt(msg.payload.col4);\n\nif (Number.isNaN(se)) return;\nif (Number.isNaN(va)) return;\nif (Number.isNaN(crc)) return;\n\nvar before = flow.get('crc') | 0;\n\nif (before == crc) {\n    // msg.payload = 'receive ack from node.'\n    // flow.set('ackFlag', false);\n    // flow.set('retry', 0);\n    msg.payload = \"---------------- ack received\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "86420dc869c49865"
            ]
        ]
    }
]